rules:
  naming-path-lower-kebab:
    description: |-
      Paths must be `lower-kebab-case`.

      Incorrect:
      ```json
      {
        "/Company-Details": {}
      }
      ```

      Correct:
      ```json
      {
        "/company-details" {}
      }
      ```
    given:
      - $.paths
    severity: 'off'
    then:
      function: pattern
      functionOptions:
        match: '^/([a-z0-9.]+(-[a-z0-9.]+)*)?(/[a-z0-9.]+(-[a-z0-9.]+)*|/{.+})*$'
      field: '@key'
  naming-path-param-lower-snake-case:
    description: >-
      Path parameter names must be `lower_snake_case`.

      Each word should be lowercase and separated by an underscore (_)
      character. Also, digits are not allowed.

      Incorrect: ```json {
        "name": "RESOURCE-ID"
      } ```

      Correct: ```json {
        "name": "resource_id"
      } ```
    severity: 'off'
    given:
      - '$..parameters[?(@.in == ''path'')]'
    then:
      function: casing
      functionOptions:
        type: snake
        disallowDigits: true
      field: name
  naming-path-param-camel-case:
    description: >-
      Parameter names in a path must be `camelCase`.

      Names containing multiple words should be seperated by capital letters,
      and all other letters should be lowercased. Also, digits are not allowed.

      Incorrect: ```json {
        "name": "RESOURCE-ID"
      } ```

      Correct: ```json {
        "name": "resourceId"
      } ```
    severity: 'off'
    given:
      - '$..parameters[?(@.in == ''path'')]'
    then:
      function: casing
      functionOptions:
        type: camel
        disallowDigits: true
      field: name
  naming-query-param-lower-snake-case:
    description: >-
      Parameter names in a query must be `lower_snake_case`.

      Each word should be lowercase and separated by an underscore (_)
      character. Also, digits are not allowed.

      Incorrect: ```json {
        "name": "RESOURCE-ID"
      } ```

      Correct: ```json {
        "name": "resource_id"
      } ```
    severity: 'off'
    given:
      - '$..parameters[?(@.in == ''query'')]'
    then:
      function: casing
      functionOptions:
        type: snake
        disallowDigits: true
      field: name
  naming-query-param-camel-case:
    description: >-
      Parameter names in a query must be `camelCase`.

      Names containing multiple words should be seperated by capital letters,
      and all other letters should be lowercased. Also, digits are not allowed.

      Incorrect: ```json {
        "name": "RESOURCE-ID"
      } ```

      Correct: ```json {
        "name": "resourceId"
      } ```
    severity: 'off'
    given:
      - '$..parameters[?(@.in == ''query'')]'
    then:
      function: casing
      functionOptions:
        type: camel
        disallowDigits: true
      field: name
  naming-prop-lower-snake-case:
    description: >-
      Property names must be `lower_snake_case`.

      Each word should be lowercase and separated by an underscore (_)
      character. Also, digits are not allowed.

      Incorrect: ```json {
        "name": "RESOURCE-ID"
      } ```

      Correct: ```json {
        "name": "resource_id"
      } ```
    severity: 'off'
    given:
      - $..properties.*~
    then:
      function: casing
      functionOptions:
        type: snake
        disallowDigits: true
      field: name
  naming-prop-camel-case:
    description: >-
      Property names must be `camelCase`.

      Names containing multiple words should be seperated by capital letters,
      and all other letters should be lowercased. Also, digits are not allowed.

      Incorrect: ```json {
        "name": "RESOURCE-ID"
      } ```

      Correct: ```json {
        "name": "resourceId"
      } ```
    severity: 'off'
    given:
      - $..properties.*~
    then:
      function: casing
      functionOptions:
        type: camel
        disallowDigits: true
      field: name
  naming-prop-enum-value-upper-snake-case:
    formats:
      - json-schema-loose
    description: Enum values should always be UPPER_SNAKE_CASED.
    severity: 'off'
    given: $.properties.*.enum.*
    then:
      function: casing
      functionOptions:
        type: macro
  naming-header-hyphenated-pascal-case:
    description: |-
      All headers must use `Hyphenated-Pascal-Case` notation.

      Incorrect:
      ```json
      {
        "get": {
          "responses": {
            "200": {
              "headers": {
                "X_STPlus_Request_Id": {}
              }
            }
          }
        }
      }
      ```

      Correct:
      ```json
      {
        "get": {
          "responses": {
            "200": {
              "headers": {
                "X-STPlus-Request-Id": {}
              }
            }
          }
        }
      }
      ```
    given:
      - '$..parameters[?(@.in == ''header'')].name'
      - $..headers.*~
    severity: 'off'
    then:
      function: pattern
      functionOptions:
        match: '^([A-Z]+[a-z0-9]*-)+([A-Z]+[a-z0-9]*)$'
