rules:
  data-array-missing-item:
    description: Arrays must specify their items.
    severity: off
    given:
    - $..paths.*.*.parameters..[?(@.type == 'array')]
    - $..paths.*.parameters..[?(@.type == 'array')]
    - $..properties..[?(@.type == 'array')]
    then:
      field: items
      function: truthy
  data-array-missing-item-type:
    description: Arrays must specify an item type.
    severity: off
    given:
    - $..paths.*.*.parameters..[?(@.type == 'array')].items
    - $..paths.*.parameters..[?(@.type == 'array')].items
    - $..properties..[?(@.type == 'array')].items
    then:
      function: xor
      functionOptions:
        properties:
        - type
        - $ref
  data-missing-description:
    description: Properties and parameters must have a non-empty `description`.
    severity: off
    given:
    - $..properties.[?(@.type == 'string'||@.type == 'number'||@.type == 'integer'||@.type
      == 'boolean'||@.type == 'object')]
    - $..parameters[*]
    then:
    - field: description
      function: truthy
  data-missing-example:
    description: Properties and parameters must have a non-empty `example`.
    severity: off
    given:
    - $..properties[?(@.type == 'string'||@.type == 'number'||@.type == 'integer'||@.type
      == 'boolean')]
    - $..parameters[*][?(@.type == 'string'||@.type == 'number'||@.type == 'integer'||@.type
      == 'boolean')]
    then:
    - field: example
      function: truthy
  data-not-type-or-ref:
    description: Properties and parameters should specify either a `type` or `$ref`.
      Composite types are not allowed because they are not supported by most SDK generation
      tools.
    severity: off
    given:
    - $..properties.*
    - $..parameters[*].schema
    then:
    - function: xor
      functionOptions:
        properties:
        - type
        - $ref
  data-object-missing-additional-prop:
    description: Objects must define `additionalProperties` as true or false. Default
      to false.
    severity: off
    given:
    - $
    - $..[?(@.type == 'object')]
    then:
    - field: additionalProperties
      function: defined
  data-prop-missing-type-and-description:
    description: Properties must have a non-empty `type` and `description`.
    severity: off
    given: $..properties.[?(@.type == 'string'||@.type == 'number'||@.type == 'integer'||@.type
      == 'boolean'||@.type == 'object')]
    then:
    - field: type
      function: truthy
    - field: description
      function: truthy
  data-string-date-not-iso-8601:
    description: Date properties and parameters must be specified in ISO 8601 (yyyy-mm-dd)
      format.
    severity: off
    given:
    - $..properties[?(@.type == 'string'&&@.format == 'date')]
    - $..parameters[*][?(@.type == 'string'&&@.format == 'date')]
    then:
    - field: example
      function: pattern
      functionOptions:
        match: \\d{4}-\\d{2}-\\d{2}
    - field: minLength
      function: length
      functionOptions:
        max: 10
        min: 10
    - field: maxLength
      function: length
      functionOptions:
        max: 10
        min: 10
  data-string-date-time-not-iso-8601:
    description: Date-time properties and parameters must be specified in ISO 8601
      (yyyy-MM-ddTHH:mm:ss.fffZ) format. Millisecond precision is provided with 3
      decimal digits.
    severity: off
    given:
    - $..properties[?(@.type == 'string'&&@.format == 'date-time')]
    - $..parameters[*][?(@.type == 'string'&&@.format == 'date-time')]
    then:
    - field: example
      function: pattern
      functionOptions:
        match: \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z
    - field: minLength
      function: length
      functionOptions:
        max: 24
        min: 24
    - field: maxLength
      function: length
      functionOptions:
        max: 24
        min: 24
  data-string-format-not-known:
    description: "String formats must be in set (date,date-time,email,uuid,uri,base64)."
    severity: off
    given: $..format
    then:
      function: enumeration
      functionOptions:
        values: [
          "date",
          "date-time",
          "email",
          "uuid",
          "uri",
          "base64"
        ]
  data-string-missing-min-max:
    description: "String properties and parameters must specify a `minLength` and `maxLength`."
    severity: off
    given:
    - $..properties[?(@.type == 'string')]
    - $..paths.*.*.parameters.*[?(@.type == 'string')]
    - $..paths.*.parameters.*[?(@.type == 'string')]
    then:
    - field: minLength
      function: defined
    - field: maxLength
      function: truthy